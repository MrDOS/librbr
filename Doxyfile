DOXYFILE_ENCODING = UTF-8
PROJECT_NAME = "librbr"
PROJECT_NUMBER = v$(LIB_VERSION)
PROJECT_BRIEF = "RBR instrument communication API"
PROJECT_LOGO = res/rbr.png
OUTPUT_DIRECTORY = docs
OPTIMIZE_OUTPUT_FOR_C = YES

ALIASES  = "readonly=The corresponding instrument parameter is read-only. \
This member is used only when reading parameters from the instrument; its \
value is ignored when sending parameters to the instrument."
ALIASES += "writeonly=This member is used only when writing parameters to the \
instrument."
ALIASES += "nol2=This parameter is unavailable for Logger2 instruments."
ALIASES += "nol3=This parameter is unavailable for Logger3 instruments."

# Both consumer and developer documentation sets will be interested in anything
# in the repository root and the library source code.
INPUT = . src
# And neither the consumer nor developer documentation sets will care about
# anything in implementation files.
EXCLUDE_PATTERNS = */src/*.c

# Include the makefile and shell scripts.
FILTER_SOURCE_FILES = YES
EXTENSION_MAPPING += no_extension=C sh=C
FILE_PATTERNS += Makefile *.sh
# Filter for the makefile/shell syntax. See the script for details.
#
# FILTER_PATTERNS seems to require a wildcard to work, even if it does nothing.
# We need to apply the filter only to the makefile and shell scripts lest it
# also be applied to the Markdown files, where lines starting with “##” are
# valid headers.
FILTER_PATTERNS = *Makefile="./shell-filter.sh" *.sh="./shell-filter.sh"

# Use the README as the documentation launching-off point.
USE_MDFILE_AS_MAINPAGE = README.md

WARNINGS = YES
WARN_IF_UNDOCUMENTED = YES
WARN_IF_DOC_ERROR = YES
WARN_NO_PARAMDOC = YES
WARN_AS_ERROR = YES
