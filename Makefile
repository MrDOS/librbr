## \file Makefile
##
## \brief Build automation.
##
## This makefile provides three different targets of interest to the end user:
##
## - `lib` will build the library (`bin/librbr.a`)
## - `docs` will generate the documentation via Doxygen (in `docs/`)
## - `tests` will run library tests (from `tests/`)
##
## An additional target may be useful to developers:
##
## - `clean` will remove any compiled binaries and documentation
## - `tidy` will remove indent backup files
##
## \author Samuel Coleman <samuel.coleman@rbr-global.com>
## \copyright Copyright (c) 2017 RBR Ltd

## \brief Archiver flags.
##
## “Archive”, in this case, refers to the `.a` archive produced by building the
## library.
##
## - `c`: create the archive if necessary
## - `r`: replace existing contents of archive
## - `s`: create/update archive index
## - `U`: maintain original UID/GID/timestamp/mode of archive contents
##
## `U` is the default behaviour of the utility except on recent Debian (and
## therefore, Ubuntu) systems, so we specify it for safety.
ARFLAGS := crsU

## \brief C compilation flags.
##
## Conventionally, extensive warnings and warnings-as-errors would only be
## enabled for debug/development builds to broaden compiler compatibility.
## (Some compilers might generate warnings for different things than others,
## and with `-Werror`, that might prevent compilation.) However, to help ensure
## high code quality everywhere, we're leaving them all on by default. Please
## let us know if you encounter issues: we want to fix them.
##
## We're also turning on debug symbol generation by default so you don't have
## to go out of your way to enable them. If you don't want them, we suggest
## using `strip(1)` on the archives as opposed to changing this makefile to
## minimize the friction of pulling in library updates.
CFLAGS := -Werror -Wall -Wextra -pedantic -pedantic-errors -std=c99 -g

all: lib docs tests

lib: bin bin/librbr.a(src/RBRInstrument.o \
                      src/RBRInstrumentCommunication.o \
                      src/RBRInstrumentConfiguration.o \
                      src/RBRInstrumentDeployment.o \
                      src/RBRInstrumentFetching.o \
                      src/RBRInstrumentGating.o \
                      src/RBRInstrumentInternal.o \
                      src/RBRInstrumentMemory.o \
                      src/RBRInstrumentOther.o \
                      src/RBRInstrumentSchedule.o \
                      src/RBRInstrumentSecurity.o \
                      src/RBRInstrumentStreaming.o \
                      src/RBRInstrumentVehicle.o)

.PHONY: docs
docs:
	doxygen Doxyfile

tests: CFLAGS += -Isrc -Wno-error=unused-parameter
tests: LDFLAGS += -Lbin
tests: LDLIBS += -lrbr
tests: bin bin/tests
	./bin/tests

# TODO: Single definition for test module names.
bin/tests: tests/main.o \
           tests/tests.o \
           tests/communication.o \
           tests/configuration.o \
           tests/deployment.o \
           tests/gating.o \
           tests/memory.o \
           tests/other.o \
           tests/schedule.o \
           tests/streaming.o \
           tests/vehicle.o \
           lib
	$(CC) $(LDFLAGS) \
		tests/main.o \
		tests/tests.o \
		tests/communication.o \
		tests/configuration.o \
		tests/deployment.o \
		tests/gating.o \
		tests/memory.o \
		tests/other.o \
		tests/schedule.o \
		tests/streaming.o \
		tests/vehicle.o \
		$(LDLIBS) -o $@

tests/tests.c: tests/communication.c \
               tests/configuration.c \
               tests/deployment.c \
               tests/gating.c \
               tests/memory.c \
               tests/other.c \
               tests/schedule.c \
               tests/streaming.c \
               tests/vehicle.c
	@echo "/* This file is automatically generated. */" >$@
	@echo '#include "tests.h"' >>$@
	@grep -ho 'TEST_LOGGER[23]([A-Za-z_][A-Za-z0-9_]*)' $^ \
		| sed -e 's/$$/;/' >>$@
	@echo "TestDeclaration tests[] = {" >>$@
	@grep -ho 'TEST_LOGGER[23]([A-Za-z_][A-Za-z0-9_]*)' $^ \
		| sed -e 's/^TEST_LOGGER\([^(]*\)(\([^)]*\))/    {"\2", RBRINSTRUMENT_LOGGER\1, test_\2_l\1},/' \
		>>$@
	@echo "    {0}" >>$@
	@echo "};" >>$@

bin:
	mkdir bin

.PHONY: clean
clean:
	rm -Rf bin/ tests/tests.c tests/*.o docs/
