pipelines:
    default:
        - step:
            name: GCC 6 compilation
            image: gcc:6
            script:
                - apt-get update && apt-get -y install libsdl2-dev
                - make clean
                - make lib tests
                - cd examples/posix
                - make clean
                - make
        - step:
            name: GCC 7 compilation
            image: gcc:7
            script:
                - apt-get update && apt-get -y install libsdl2-dev
                - make clean
                - make lib tests
                - cd examples/posix
                - make clean
                - make
        - step:
            name: GCC 8 compilation
            image: gcc:8
            script:
                - apt-get update && apt-get -y install libsdl2-dev
                - make clean
                - make lib tests
                - cd examples/posix
                - make clean
                - make
        - step:
            name: GCC 9 compilation
            image: gcc:9
            script:
                - apt-get update && apt-get -y install libsdl2-dev
                - make clean
                - make lib tests
                - cd examples/posix
                - make clean
                - make

        - step:
            name: Clang 6 compilation
            image: rsmmr/clang:6.0
            script:
                - apt-get update && apt-get -y install libsdl2-dev
                - make clean
                - make lib tests
                - cd examples/posix
                - make clean
                - make
        # To save time, and under the assumption that the quality and relevance
        # of scan-build findings will only improve over time, we'll perform
        # static analysis with only the latest version of Clang.
        - step:
            name: Clang 9 compilation and static analysis
            image: rsmmr/clang:9.0
            script:
                - apt-get update && apt-get -y install libsdl2-dev
                - make clean
                - scan-build make lib
                - make lib tests
                - cd examples/posix
                - make clean
                - scan-build make

        - step:
            name: Documentation compilation
            image: gcc:9
            script:
                - apt-get update && apt-get -y install doxygen graphviz
                - make clean
                - make docs
                - make clean
                - make devdocs
